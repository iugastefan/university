-- 2
-- a
SELECT count(*)
FROM EMPLOYEES;

-- b
SELECT count(*)
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL;

SELECT count(MANAGER_ID)
FROM EMPLOYEES;

-- c
SELECT count(DISTINCT MANAGER_ID)
FROM EMPLOYEES;

SELECT count(*)
FROM EMPLOYEES
WHERE EMPLOYEE_ID IN (SELECT MANAGER_ID FROM EMPLOYEES);

-- 3
SELECT max(SALARY) - min(SALARY) DIFERENTA
FROM EMPLOYEES;

-- 4
SELECT count(*)
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 50;

-- 5
SELECT count(COMMISSION_PCT)
FROM EMPLOYEES
WHERE DEPARTMENT_ID = 80;

-- 6
SELECT avg(SALARY), sum(SALARY)
FROM EMPLOYEES
WHERE JOB_ID IN ('SA_MAN', 'SA_REP');

-- 7
SELECT E.EMPLOYEE_ID,
       E.HIRE_DATE,
       E.JOB_ID,
       E.DEPARTMENT_ID,
       JH.START_DATE,
       JH.END_DATE,
       JH.JOB_ID,
       JH.DEPARTMENT_ID
FROM EMPLOYEES E
         JOIN JOB_HISTORY JH ON E.EMPLOYEE_ID = JH.EMPLOYEE_ID
ORDER BY 1, START_DATE;

-- a
SELECT min(HIRE_DATE)
FROM EMPLOYEES;

SELECT min(HIRE_DATE)
FROM (SELECT HIRE_DATE FROM EMPLOYEES UNION SELECT START_DATE FROM JOB_HISTORY);


-- b
SELECT LAST_NAME
FROM ((SELECT HIRE_DATE, LAST_NAME
       FROM EMPLOYEES
       UNION
       (SELECT START_DATE, E.LAST_NAME
        FROM JOB_HISTORY,
             EMPLOYEES E
        WHERE E.EMPLOYEE_ID = JOB_HISTORY.EMPLOYEE_ID)))
ORDER BY HIRE_DATE;

-- 8
SELECT JOB_ID, count(EMPLOYEE_ID) NR_ANGAJATI
FROM EMPLOYEES
GROUP BY JOB_ID;

-- care este optima?
-- https://asktom.oracle.com/pls/asktom/f?p=100:11:0::::P11_QUESTION_ID:32961403234212
-- sunt identice ca timp
SELECT DISTINCT JOB_ID
FROM EMPLOYEES;

SELECT JOB_ID
FROM EMPLOYEES
GROUP BY JOB_ID;

-- 9
SELECT DEPARTMENT_ID,
       min(SALARY),
       max(SALARY),
       sum(SALARY),
       round(avg(SALARY))
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

-- 10
SELECT DEPARTMENT_ID, JOB_ID, round(AVG(SALARY), 2)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID, JOB_ID
ORDER BY DEPARTMENT_ID;

-- 11
-- a
SELECT DEPARTMENT_ID, MIN(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING MIN(SALARY) > 5000;


-- care e mai optima?
-- prima
SELECT DEPARTMENT_ID, MIN(SALARY)
FROM EMPLOYEES
WHERE DEPARTMENT_ID > 50
GROUP BY DEPARTMENT_ID
HAVING MIN(SALARY) > 5000;

SELECT DEPARTMENT_ID, MIN(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING MIN(SALARY) > 5000
   AND DEPARTMENT_ID > 50;


-- b
SELECT DEPARTMENT_NAME, MIN(SALARY)
FROM EMPLOYEES E
         JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY DEPARTMENT_NAME, E.DEPARTMENT_ID
HAVING MIN(SALARY) > 5000;

SELECT DEPARTMENT_NAME
FROM EMPLOYEES E,
     DEPARTMENTS D
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY DEPARTMENT_NAME
HAVING min(SALARY) > 5000;

-- care e optima
SELECT DEPARTMENT_NAME, MIN(SALARY)
FROM EMPLOYEES E
         JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY E.DEPARTMENT_ID, D.DEPARTMENT_NAME
HAVING MIN(SALARY) > 5000;


SELECT max(DEPARTMENT_NAME), MIN(SALARY)
FROM EMPLOYEES E
         JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY E.DEPARTMENT_ID
HAVING MIN(SALARY) > 5000;

-- c
SELECT E.DEPARTMENT_ID, DEPARTMENT_NAME, CITY, MIN(SALARY)
FROM EMPLOYEES E
         JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
         JOIN LOCATIONS L ON D.LOCATION_ID = L.LOCATION_ID
GROUP BY DEPARTMENT_NAME, E.DEPARTMENT_ID, CITY
HAVING MIN(SALARY) > 5000;

-- 12
SELECT D.DEPARTMENT_ID, count(E.EMPLOYEE_ID)
FROM DEPARTMENTS D
         JOIN EMPLOYEES E ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_ID
HAVING count(E.EMPLOYEE_ID) > 10;

--care e optima
SELECT count(*)
FROM (
         SELECT D.DEPARTMENT_ID, count(E.EMPLOYEE_ID)
         FROM DEPARTMENTS D
                  JOIN EMPLOYEES E ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
         GROUP BY D.DEPARTMENT_ID
         HAVING count(E.EMPLOYEE_ID) > 10);


SELECT COUNT(COUNT(EMPLOYEE_ID))
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING COUNT(*) > = 10;


-- 14
SELECT EMPLOYEES.DEPARTMENT_ID, sum(SALARY)
FROM EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL
GROUP BY EMPLOYEES.DEPARTMENT_ID
HAVING count(*) > 5
ORDER BY 2 ASC;


-- 15
SELECT DISTINCT FIRST_NAME
FROM EMPLOYEES
         JOIN JOB_HISTORY ON EMPLOYEES.EMPLOYEE_ID = JOB_HISTORY.EMPLOYEE_ID;

-- 16
SELECT JOB_ID
FROM EMPLOYEES
GROUP BY JOB_ID
HAVING AVG(SALARY) = (SELECT MIN(AVG(SALARY))
                      FROM EMPLOYEES
                      GROUP BY JOB_ID);

-- 17
SELECT max(round(avg(SALARY)))
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;

-- 18
-- a
SELECT D.DEPARTMENT_ID, DEPARTMENT_NAME, A.SUMA
FROM DEPARTMENTS D,
     (SELECT DEPARTMENT_ID, SUM(SALARY) SUMA
      FROM EMPLOYEES
      GROUP BY DEPARTMENT_ID) A
WHERE D.DEPARTMENT_ID = A.DEPARTMENT_ID
ORDER BY 1;

-- b
SELECT D.DEPARTMENT_ID, DEPARTMENT_NAME, sum(SALARY) SUMA
FROM DEPARTMENTS D,
     EMPLOYEES E
WHERE D.DEPARTMENT_ID = E.DEPARTMENT_ID
GROUP BY D.DEPARTMENT_ID, D.DEPARTMENT_NAME
ORDER BY 1;

-- 19
-- a
SELECT DEPARTMENT_NAME                         "Departament",
       (SELECT COUNT(EMPLOYEE_ID)
        FROM EMPLOYEES
        WHERE DEPARTMENT_ID = D.DEPARTMENT_ID) "Nr. angajati",
       (SELECT round(AVG(SALARY))
        FROM EMPLOYEES
        WHERE DEPARTMENT_ID = D.DEPARTMENT_ID) "Salariu mediu"
FROM DEPARTMENTS D;

-- b
SELECT DEPARTMENT_NAME "Departament",
       COUNT(EMPLOYEE_ID) "Nr. angajati",
       round(AVG(SALARY)) "Salariu mediu"
FROM EMPLOYEES E,
     DEPARTMENTS D
WHERE E.DEPARTMENT_ID(+) = D.DEPARTMENT_ID
GROUP BY DEPARTMENT_NAME;

SELECT DEPARTMENT_NAME "Departament",
       COUNT(EMPLOYEE_ID),
       round(AVG(SALARY))
FROM EMPLOYEES E
         RIGHT OUTER JOIN
     DEPARTMENTS D ON
         E.DEPARTMENT_ID = D.DEPARTMENT_ID
GROUP BY DEPARTMENT_NAME;

-- 20
SELECT DISTINCT JOB_ID,
                (SELECT SUM(SALARY)
                 FROM EMPLOYEES
                 WHERE JOB_ID = E.JOB_ID
                   AND DEPARTMENT_ID = 10
                 GROUP BY JOB_ID)         DEP10,
                (SELECT SUM(SALARY)
                 FROM EMPLOYEES
                 WHERE JOB_ID = E.JOB_ID
                   AND DEPARTMENT_ID = 20
                 GROUP BY JOB_ID)         DEP20,
                (SELECT SUM(SALARY)
                 FROM EMPLOYEES
                 WHERE JOB_ID = E.JOB_ID
                   AND DEPARTMENT_ID = 30
                 GROUP BY JOB_ID)         DEP30,
                nvl((SELECT SUM(SALARY)
                     FROM EMPLOYEES
                     WHERE JOB_ID = E.JOB_ID
                       AND DEPARTMENT_ID IN (10, 20, 30)
                     GROUP BY JOB_ID), 0) TOTAL
FROM EMPLOYEES E;

SELECT DISTINCT JOB_ID,
                (SELECT SUM(SALARY)
                 FROM EMPLOYEES
                 WHERE JOB_ID = E.JOB_ID
                   AND DEPARTMENT_ID = 10
                )         DEP10,
                (SELECT SUM(SALARY)
                 FROM EMPLOYEES
                 WHERE JOB_ID = E.JOB_ID
                   AND DEPARTMENT_ID = 20
                )         DEP20,
                (SELECT SUM(SALARY)
                 FROM EMPLOYEES
                 WHERE JOB_ID = E.JOB_ID
                   AND DEPARTMENT_ID = 30
                )         DEP30,
                nvl((SELECT SUM(SALARY)
                     FROM EMPLOYEES
                     WHERE JOB_ID = E.JOB_ID
                       AND DEPARTMENT_ID IN (10, 20, 30)
                    ), 0) TOTAL
FROM EMPLOYEES E;

-- e
SELECT DISTINCT JOB_ID,
                sum(decode(DEPARTMENT_ID, 10, SALARY, 0))                         DEP10,
                sum(decode(DEPARTMENT_ID, 20, SALARY, 0))                         DEP20,
                sum(decode(DEPARTMENT_ID, 30, SALARY))                            DEP30,
                sum(decode(DEPARTMENT_ID, 10, SALARY, 20, SALARY, 30, SALARY, 0)) TOTAL

FROM EMPLOYEES E
GROUP BY JOB_ID;

-- 21
SELECT sum(decode(to_char(HIRE_DATE, 'yyyy'), 1997, 1, 0))                            "1997",
       sum(decode(to_char(HIRE_DATE, 'yyyy'), 1998, 1, 0))                            "1998",
       sum(decode(to_char(HIRE_DATE, 'yyyy'), 1999, 1, 0))                            "1999",
       sum(decode(to_char(HIRE_DATE, 'yyyy'), 2000, 1, 0))                            "2000",
       sum(decode(to_char(HIRE_DATE, 'yyyy'), 1997, 1, 1998, 1, 1999, 1, 2000, 1, 0)) "total"
FROM EMPLOYEES;

-- 22
SELECT DEPARTMENT_ID, MANAGER_ID, COUNT(EMPLOYEE_ID)
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL
  AND DEPARTMENT_ID IS NOT NULL
GROUP BY ROLLUP (DEPARTMENT_ID, MANAGER_ID
    );

SELECT DEPARTMENT_ID, MANAGER_ID, COUNT(EMPLOYEE_ID)
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL
  AND DEPARTMENT_ID IS NOT NULL
GROUP BY (DEPARTMENT_ID, MANAGER_ID)
UNION ALL
SELECT DEPARTMENT_ID, NULL, COUNT(EMPLOYEE_ID)
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL
  AND DEPARTMENT_ID IS NOT NULL
GROUP BY DEPARTMENT_ID
UNION ALL
SELECT NULL,
       NULL,
       COUNT(EMPLOYEE_ID)
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL
  AND DEPARTMENT_ID IS NOT NULL;

SELECT DEPARTMENT_ID, MANAGER_ID, COUNT(EMPLOYEE_ID)
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL
  AND DEPARTMENT_ID IS NOT NULL
GROUP BY GROUPING SETS (
    (DEPARTMENT_ID, MANAGER_ID),
    ( DEPARTMENT_ID),
    ( )
    );

-- 23
SELECT DEPARTMENT_ID, MANAGER_ID, COUNT(EMPLOYEE_ID)
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL
  AND DEPARTMENT_ID IS NOT NULL
GROUP BY CUBE (DEPARTMENT_ID, MANAGER_ID
    );

SELECT DEPARTMENT_ID, MANAGER_ID, COUNT(EMPLOYEE_ID)
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL
  AND DEPARTMENT_ID IS NOT NULL
GROUP BY (DEPARTMENT_ID, MANAGER_ID)
UNION ALL
SELECT DEPARTMENT_ID, NULL, COUNT(EMPLOYEE_ID)
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL
  AND DEPARTMENT_ID IS NOT NULL
GROUP BY DEPARTMENT_ID
UNION ALL
SELECT NULL, MANAGER_ID, COUNT(EMPLOYEE_ID)
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL
  AND DEPARTMENT_ID IS NOT NULL
GROUP BY MANAGER_ID
UNION ALL
SELECT NULL,
       NULL,
       COUNT(EMPLOYEE_ID)
FROM EMPLOYEES
WHERE MANAGER_ID IS NOT NULL
  AND DEPARTMENT_ID IS NOT NULL;

-- 24
SELECT DEPARTMENT_ID, JOB_ID, to_char(HIRE_DATE, 'YYYY'), count(EMPLOYEE_ID)
FROM EMPLOYEES
GROUP BY ROLLUP (DEPARTMENT_ID, JOB_ID, HIRE_DATE);


-- 25
SELECT DEPARTMENT_ID, JOB_ID, sum(SALARY)
FROM EMPLOYEES
GROUP BY CUBE (DEPARTMENT_ID, JOB_ID);

-- 26
SELECT D.DEPARTMENT_NAME,
       J.JOB_TITLE,
       round(avg(SALARY))          MEDIA,
       grouping(D.DEPARTMENT_NAME) DEPT,
       grouping(J.JOB_TITLE)       JOB
FROM EMPLOYEES E
         JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
         JOIN JOBS J ON E.JOB_ID = J.JOB_ID
GROUP BY ROLLUP (D.DEPARTMENT_NAME, J.JOB_TITLE
    );

SELECT D.DEPARTMENT_NAME,
       J.JOB_TITLE,
       round(avg(SALARY))          MEDIA,
       grouping(D.DEPARTMENT_NAME) DEPT,
       grouping(J.JOB_TITLE)       JOB
FROM EMPLOYEES E
         JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
         JOIN JOBS J ON E.JOB_ID = J.JOB_ID
GROUP BY ROLLUP (D.DEPARTMENT_NAME, J.JOB_TITLE
    )
HAVING grouping(D.DEPARTMENT_NAME) = 1
    OR grouping(J.JOB_TITLE) = 1;

-- 27

SELECT D.DEPARTMENT_NAME,
       J.JOB_TITLE,
       round(avg(SALARY))          MEDIA,
       grouping(D.DEPARTMENT_NAME) DEPT,
       grouping(J.JOB_TITLE)       JOB
FROM EMPLOYEES E
         JOIN DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
         JOIN JOBS J ON E.JOB_ID = J.JOB_ID
GROUP BY CUBE (D.DEPARTMENT_NAME, J.JOB_TITLE
    );

-- 28
SELECT DEPARTMENT_ID,
       MANAGER_ID,
       COUNT(EMPLOYEE_ID)      NR,
       grouping(DEPARTMENT_ID) DEPT,
       grouping(MANAGER_ID)    MGR
FROM EMPLOYEES
GROUP BY CUBE (DEPARTMENT_ID, MANAGER_ID );

-- 29
SELECT DEPARTMENT_NAME, JOB_TITLE, E.MANAGER_ID, max(SALARY), sum(SALARY)
FROM EMPLOYEES E
         JOIN DEPARTMENTS D ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
         JOIN JOBS J ON E.JOB_ID = J.JOB_ID
GROUP BY GROUPING SETS ((DEPARTMENT_NAME, JOB_TITLE), (JOB_TITLE, E.MANAGER_ID), ());
