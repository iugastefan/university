-- 1
SELECT A.EMPLOYEE_ID, A.LAST_NAME
FROM EMPLOYEES A,
     EMPLOYEES B
WHERE A.SALARY > B.SALARY
  AND B.EMPLOYEE_ID = 200;


SELECT EMPLOYEE_ID, LAST_NAME
FROM EMPLOYEES E
WHERE EXISTS(SELECT 1
             FROM EMPLOYEES
             WHERE EMPLOYEE_ID = 200
               AND E.SALARY > SALARY);

-- 2
SELECT EMPLOYEE_ID, LAST_NAME
FROM EMPLOYEES E
WHERE E.SALARY > (SELECT SALARY
                  FROM EMPLOYEES
                  WHERE EMPLOYEE_ID = 200);

-- 3
SELECT DEPARTMENT_ID, DEPARTMENT_NAME
FROM DEPARTMENTS D
WHERE EXISTS(SELECT 'x' FROM EMPLOYEES WHERE DEPARTMENT_ID = D.DEPARTMENT_ID);


SELECT DISTINCT D.DEPARTMENT_ID, D.DEPARTMENT_NAME
FROM DEPARTMENTS D,
     EMPLOYEES E
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID;

-- 4
SELECT DEPARTMENT_ID, DEPARTMENT_NAME
FROM DEPARTMENTS D
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID FROM EMPLOYEES);

-- 6
-- a
SELECT LOCATION_ID, CITY
FROM LOCATIONS
WHERE LOCATION_ID NOT IN (SELECT LOCATION_ID FROM DEPARTMENTS);

-- b
SELECT LOCATION_ID, CITY
FROM LOCATIONS
MINUS
SELECT D.LOCATION_ID, CITY
FROM DEPARTMENTS D
         JOIN LOCATIONS ON D.LOCATION_ID = LOCATIONS.LOCATION_ID;

-- c
SELECT LOCATION_ID, CITY
FROM LOCATIONS
WHERE NOT exists(
        SELECT 1
        FROM DEPARTMENTS
        WHERE LOCATION_ID = LOCATIONS.LOCATION_ID);

-- d
SELECT LOCATIONS.LOCATION_ID, CITY
FROM LOCATIONS
         LEFT OUTER JOIN DEPARTMENTS ON LOCATIONS.LOCATION_ID = DEPARTMENTS.LOCATION_ID
WHERE DEPARTMENTS.LOCATION_ID IS NULL;

-- 7
SELECT DISTINCT E.LAST_NAME, E.EMPLOYEE_ID
FROM EMPLOYEES E
         JOIN WORK W ON E.EMPLOYEE_ID = W.EMPLOYEE_ID
WHERE E.EMPLOYEE_ID != 202
  AND (
              (SELECT PROJECT_ID FROM WORK W3 WHERE W3.EMPLOYEE_ID = 202)
              MINUS
              (SELECT PROJECT_ID FROM WORK W2 WHERE E.EMPLOYEE_ID = W2.EMPLOYEE_ID)) IS NULL;

-- 8
SELECT DISTINCT E.LAST_NAME, E.EMPLOYEE_ID
FROM EMPLOYEES E
         JOIN WORK W ON E.EMPLOYEE_ID = W.EMPLOYEE_ID
WHERE E.EMPLOYEE_ID != 202
  AND (
              (SELECT PROJECT_ID FROM WORK W2 WHERE E.EMPLOYEE_ID = W2.EMPLOYEE_ID)
              MINUS
              (SELECT PROJECT_ID FROM WORK W3 WHERE W3.EMPLOYEE_ID = 202)
      )
    IS NULL;

-- 9
SELECT DISTINCT E.LAST_NAME, E.EMPLOYEE_ID
FROM EMPLOYEES E
         JOIN WORK W ON E.EMPLOYEE_ID = W.EMPLOYEE_ID
WHERE E.EMPLOYEE_ID != 202
  AND (
            (
                    (SELECT PROJECT_ID FROM WORK W2 WHERE E.EMPLOYEE_ID = W2.EMPLOYEE_ID)
                    INTERSECT
                    (SELECT PROJECT_ID FROM WORK W3 WHERE W3.EMPLOYEE_ID = 202)
            )
            IS NULL
        AND (
                    (SELECT PROJECT_ID FROM WORK W3 WHERE W3.EMPLOYEE_ID = 202)
                    MINUS
                    (SELECT PROJECT_ID FROM WORK W2 WHERE E.EMPLOYEE_ID = W2.EMPLOYEE_ID)
            ) IS NULL
    );

-- 10
SELECT P.PROJECT_ID,
       PROJECT_NAME
FROM PROJECTS P,
     WORK W
WHERE P.PROJECT_ID = W.PROJECT_ID
  AND EMPLOYEE_ID IN (SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE DEPARTMENT_ID = 20)
GROUP BY P.PROJECT_ID, PROJECT_NAME
HAVING COUNT(*) = (SELECT COUNT(*) FROM EMPLOYEES WHERE DEPARTMENT_ID = 20);

-- 12
SELECT LEVEL, EMPLOYEE_ID, LAST_NAME, MANAGER_ID
FROM EMPLOYEES
CONNECT BY PRIOR MANAGER_ID = EMPLOYEE_ID;

-- tema connect by si sincronizare
-- 13
SELECT LEVEL, EMPLOYEE_ID, LAST_NAME, MANAGER_ID
FROM EMPLOYEES
START WITH EMPLOYEE_ID = 103
CONNECT BY PRIOR MANAGER_ID = EMPLOYEE_ID;

-- 16
SELECT EMPLOYEE_ID, LAST_NAME, SALARY, MANAGER_ID
FROM EMPLOYEES
-- where salary>15000
START WITH EMPLOYEE_ID = 206
CONNECT BY PRIOR MANAGER_ID = EMPLOYEE_ID;

-- 17
-- a
SELECT EMPLOYEE_ID, LAST_NAME, HIRE_DATE, SALARY, MANAGER_ID
FROM EMPLOYEES
WHERE MANAGER_ID IN (SELECT EMPLOYEE_ID FROM EMPLOYEES WHERE LAST_NAME = 'De Haan');

-- b
SELECT EMPLOYEE_ID, LAST_NAME, HIRE_DATE, SALARY, MANAGER_ID
FROM EMPLOYEES
WHERE EMPLOYEE_ID = (SELECT MANAGER_ID FROM EMPLOYEES WHERE LAST_NAME = 'De Haan');

-- c
SELECT EMPLOYEE_ID, LAST_NAME, HIRE_DATE, SALARY, MANAGER_ID
FROM EMPLOYEES
WHERE LAST_NAME != 'De Haan'
START WITH LAST_NAME = 'De Haan'
CONNECT BY MANAGER_ID = PRIOR EMPLOYEE_ID;

-- d
SELECT EMPLOYEE_ID, LAST_NAME, HIRE_DATE, SALARY, MANAGER_ID
FROM EMPLOYEES
WHERE LEVEL = 3
START WITH LAST_NAME = 'De Haan'
CONNECT BY MANAGER_ID = PRIOR EMPLOYEE_ID;

-- e
SELECT EMPLOYEE_ID, LAST_NAME, HIRE_DATE, SALARY, MANAGER_ID
FROM EMPLOYEES
WHERE LEVEL <> 1
START WITH LAST_NAME = 'Hunold'
CONNECT BY PRIOR MANAGER_ID = EMPLOYEE_ID;

-- f
SELECT EMPLOYEE_ID, LAST_NAME, HIRE_DATE, SALARY, MANAGER_ID
FROM EMPLOYEES
WHERE LEVEL = 3
START WITH LAST_NAME = 'Hunold'
CONNECT BY PRIOR MANAGER_ID = EMPLOYEE_ID;

-- 18
SELECT count(MANAGER_ID)
FROM EMPLOYEES
START WITH EMPLOYEE_ID = 107
CONNECT BY PRIOR MANAGER_ID = EMPLOYEE_ID;

-- 19
-- neterminat
SELECT EMPLOYEE_ID, LAST_NAME, MANAGER_ID, DEPARTMENT_ID
FROM EMPLOYEES
         where EMPLOYEE_ID IN (SELECT MANAGER_ID FROM DEPARTMENTS)
CONNECT BY MANAGER_ID = EMPLOYEE_ID;

