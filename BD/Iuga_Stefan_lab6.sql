-- 1
CREATE TABLE TEST_IUGA
AS
SELECT *
FROM DEPARTMENTS;

SELECT *
FROM EMP_PROF;

SAVEPOINT A;

DELETE
FROM TEST_IUGA;

INSERT INTO TEST_IUGA
VALUES (300,
        'Economic',
        100,
        1000);

INSERT INTO TEST_IUGA
VALUES (350,
        'Cercetare',
        200,
        2000);

SAVEPOINT B;

INSERT INTO TEST_IUGA
VALUES (400,
        'Juritic',
        150,
        3000);

SELECT *
FROM TEST_IUGA;

ROLLBACK TO B;

SELECT *
FROM TEST_IUGA;

ROLLBACK TO A;

INSERT INTO TEST_IUGA
VALUES (500,
        'Contabilitate',
        175,
        1500);

COMMIT;

SELECT *
FROM TEST_IUGA;

DROP TABLE TEST_IUGA;


-- flashback referat


-- 2

CREATE TABLE EMP_IUGA
AS
SELECT *
FROM EMPLOYEES;

CREATE TABLE DEPT_IUGA
AS
SELECT *
FROM DEPARTMENTS;

-- 3

SELECT *
FROM EMP_IUGA;

SELECT *
FROM DEPT_IUGA;

-- 4

DELETE
FROM DEPT_IUGA;

TRUNCATE TABLE EMP_IUGA;

-- 5

DESC EMP_IUGA

DESC DEPT_IUGA

-- 6

INSERT INTO DEPT_IUGA (DEPARTMENT_ID,
                       LOCATION_ID)
VALUES (200,
        2000);

INSERT INTO DEPT_IUGA
VALUES (200,
        2000);

INSERT INTO DEPT_IUGA (DEPARTMENT_ID,
                       DEPARTMENT_NAME,
                       LOCATION_ID)
VALUES (200,
        2000);

INSERT INTO DEPT_IUGA (DEPARTMENT_ID,
                       LOCATION_ID)
VALUES ('D23',
        2000);

INSERT INTO DEPT_IUGA (DEPARTMENT_ID,
                       LOCATION_ID)
VALUES (15000,
        2000);

-- 7

INSERT INTO EMP_IUGA
SELECT *
FROM EMPLOYEES
WHERE COMMISSION_PCT >= 0.25;

-- 8

CREATE TABLE EMP1_IUGA
AS
SELECT *
FROM EMPLOYEES
WHERE 1 = 0;

CREATE TABLE EMP2_IUGA
AS
SELECT *
FROM EMPLOYEES
WHERE 1 = 0;

CREATE TABLE EMP3_IUGA
AS
SELECT *
FROM EMPLOYEES
WHERE 1 = 0;

INSERT
    ALL WHEN SALARY <= 6000 THEN
    INTO EMP1_IUGA
    WHEN SALARY > 6000
        AND SALARY < 10000 THEN
    INTO EMP2_IUGA
    ELSE
    INTO EMP3_IUGA
SELECT *
FROM EMPLOYEES;

INSERT
    ALL WHEN SALARY <= 6000 THEN
    INTO EMP1_IUGA
    WHEN SALARY >= 6000
        AND SALARY <= 10000 THEN
    INTO EMP2_IUGA
    WHEN SALARY >= 10000 THEN
    INTO EMP3_IUGA
SELECT *
FROM EMPLOYEES;

SELECT *
FROM EMP1_IUGA
ORDER BY SALARY;

SELECT *
FROM EMP2_IUGA
ORDER BY SALARY;

SELECT *
FROM EMP3_IUGA
ORDER BY SALARY;

ROLLBACK;


-- 9

CREATE TABLE EMP0_IUGA
AS
SELECT *
FROM EMPLOYEES
WHERE 1 = 0;

INSERT
    ALL WHEN DEPARTMENT_ID = 80 THEN
    INTO EMP0_IUGA
    WHEN SALARY <= 6000
        AND NVL(DEPARTMENT_ID, 0) <> 80 THEN
    INTO EMP1_IUGA
    WHEN SALARY >= 6001
        AND SALARY <= 10000
        AND NVL(DEPARTMENT_ID, 0) <> 80 THEN
    INTO EMP2_IUGA
    WHEN SALARY >= 10001
        AND NVL(DEPARTMENT_ID, 0) <> 80 THEN
    INTO EMP3_IUGA
SELECT *
FROM EMPLOYEES;

SELECT *
FROM EMP0_IUGA
ORDER BY SALARY;

SELECT *
FROM EMP1_IUGA
ORDER BY SALARY;

SELECT *
FROM EMP2_IUGA
ORDER BY SALARY;

SELECT *
FROM EMP3_IUGA
ORDER BY SALARY;

ROLLBACK;

SELECT *
FROM EMPLOYEES
MINUS
(SELECT *
 FROM EMP0_IUGA
 UNION ALL
 SELECT *
 FROM EMP1_IUGA
 UNION ALL
 SELECT *
 FROM EMP2_IUGA
 UNION ALL
 SELECT *
 FROM EMP3_IUGA
);

INSERT
    ALL WHEN DEPARTMENT_ID = 80 THEN
    INTO EMP0_IUGA
    WHEN SALARY <= 6000 THEN
    INTO EMP1_IUGA
    WHEN SALARY <= 10000 THEN
    INTO EMP2_IUGA
    ELSE
    INTO EMP3_IUGA
SELECT *
FROM EMPLOYEES;

ROLLBACK;

SELECT *
FROM EMP2_IUGA
WHERE EMPLOYEE_ID = 178;


-- 10

ACCEPT N PROMPT 'n='

SELECT LAST_NAME,
       JOB_ID,
       SALARY
FROM EMPLOYEES
WHERE SALARY > &N;

-- 11

VAR V_DEPT_ID NUMBER

BEGIN
    INSERT INTO DEPT_IUGA (DEPARTMENT_ID,
                           DEPARTMENT_NAME,
                           MANAGER_ID,
                           LOCATION_ID)
    VALUES (123,
            'asd',
            123,
            123);

    SELECT DEPARTMENT_ID INTO :V_DEPT_ID
    FROM DEPT_IUGA
    WHERE DEPARTMENT_ID = 123;

    ROLLBACK;
END;
/

PRINT V_DEPT_ID

-- 12

TRUNCATE TABLE EMP_IUGA;

TRUNCATE TABLE DEPT_IUGA;

INSERT INTO EMP_IUGA
SELECT *
FROM EMPLOYEES;

INSERT INTO DEPT_IUGA
SELECT *
FROM DEPARTMENTS;

COMMIT;

-- 13

DELETE
FROM DEPT_IUGA
WHERE DEPARTMENT_ID IN (
    SELECT DEPARTMENT_ID
    FROM DEPT_IUGA
    WHERE DEPARTMENT_ID NOT IN (
        SELECT DEPARTMENT_ID
        FROM EMPLOYEES
        WHERE DEPARTMENT_ID IS NOT NULL
        GROUP BY DEPARTMENT_ID
    )
);

ROLLBACK;

-- 14

DELETE
FROM EMP_IUGA
WHERE EMPLOYEE_ID NOT IN (SELECT MANAGER_ID
                          FROM DEPARTMENTS
                          WHERE MANAGER_ID IS NOT NULL
                          UNION
                          SELECT MANAGER_ID
                          FROM EMP_IUGA
                          WHERE MANAGER_ID IS NOT NULL
                          GROUP BY MANAGER_ID);
ROLLBACK;

-- 15
var last_name VARCHAR2
acc n prompt 'cod angajat='
DELETE
FROM EMP_IUGA
WHERE EMPLOYEE_ID = &n
    RETURNING last_name
INTO :last_name;
print :last_name;
ROLLBACK;

-- 16
UPDATE EMP_IUGA
SET SALARY = SALARY * 1.05;
ROLLBACK;

-- 17
SELECT SALARY, COMMISSION_PCT
FROM EMP_IUGA
WHERE DEPARTMENT_ID = 80;
UPDATE EMP_IUGA
SET SALARY        = SALARY + SALARY * nvl(COMMISSION_PCT, 1),
    COMMISSION_PCT=0
WHERE DEPARTMENT_ID = 80;
ROLLBACK;

-- 18
SELECT *
FROM EMP_IUGA
WHERE FIRST_NAME || LAST_NAME = 'DouglasGrant';
UPDATE EMP_IUGA
SET JOB_ID='MK_MAN',
    SALARY=SALARY + 1000,
    DEPARTMENT_ID=20
WHERE FIRST_NAME || LAST_NAME = 'DouglasGrant';
ROLLBACK;

-- 21
UPDATE EMP_IUGA
SET SALARY = (SELECT avg(SALARY) FROM EMP_IUGA)
WHERE EMPLOYEE_ID IN (
    SELECT min(EMPLOYEE_ID)
    FROM EMP_IUGA
             INNER JOIN(
        SELECT min(HIRE_DATE) HIRE
        FROM EMP_IUGA
        GROUP BY DEPARTMENT_ID) MAX_HIRE ON MAX_HIRE.HIRE = EMP_IUGA.HIRE_DATE
    GROUP BY HIRE);
ROLLBACK;

-- 22
UPDATE EMP_IUGA
SET EMAIL = substr(LAST_NAME, 1, 1) || '_' || FIRST_NAME
WHERE EMPLOYEE_ID IN (
    SELECT EMPLOYEE_ID
    FROM EMP_IUGA
             INNER JOIN (
        SELECT max(SALARY) SAL, DEPARTMENT_ID DEPT FROM EMP_IUGA GROUP BY DEPARTMENT_ID
    ) MAX_SAL ON MAX_SAL.SAL = EMP_IUGA.SALARY AND MAX_SAL.DEPT = EMP_IUGA.DEPARTMENT_ID
);
ROLLBACK;

-- 23
var last_name VARCHAR2(30);
var email VARCHAR2(30);
UPDATE EMP_IUGA
SET LAST_NAME=LAST_NAME,
    EMAIL    = substr(LAST_NAME, 1, 1) || '_' || FIRST_NAME
WHERE EMPLOYEE_ID = 203 RETURNING EMAIL, LAST_NAME INTO :email, :last_name;
print;
ROLLBACK;

-- 24
acc idx NUMBER prompt'id='
UPDATE EMP_IUGA
SET SALARY=SALARY + 1000
WHERE EMPLOYEE_ID = &idx;
ROLLBACK;

-- 25 a
DELETE
FROM EMP_IUGA
WHERE DEPARTMENT_ID = 80;
-- b
UPDATE EMP_IUGA
SET SALARY=SALARY * 0.95
WHERE DEPARTMENT_ID = 50;
-- c
MERGE INTO EMP_IUGA A
USING EMPLOYEES B
ON (A.EMPLOYEE_ID = B.EMPLOYEE_ID)
WHEN MATCHED THEN
    UPDATE
    SET A.FIRST_NAME=B.FIRST_NAME,
        A.LAST_NAME=B.LAST_NAME,
        A.EMAIL=B.EMAIL,
        A.PHONE_NUMBER=B.PHONE_NUMBER,
        A.HIRE_DATE= B.HIRE_DATE,
        A.JOB_ID= B.JOB_ID,
        A.SALARY = B.SALARY,
        A.COMMISSION_PCT= B.COMMISSION_PCT,
        A.MANAGER_ID= B.MANAGER_ID,
        A.DEPARTMENT_ID= B.DEPARTMENT_ID
WHEN NOT MATCHED THEN
    INSERT
    VALUES (B.EMPLOYEE_ID, B.FIRST_NAME,
            B.LAST_NAME, B.EMAIL, B.PHONE_NUMBER,
            B.HIRE_DATE, B.JOB_ID, B.SALARY,
            B.COMMISSION_PCT, B.MANAGER_ID, B.DEPARTMENT_ID);
